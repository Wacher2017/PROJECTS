<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>

	<groupId>com.demo</groupId>
	<artifactId>LMS</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>LMS</name>
	<description>Demo project for Spring Boot</description>

	<modules>
		<module>lms-common</module>
		<module>lms-api</module>
		<module>lms-sample</module>
		<module>lms-framework</module>
		<module>lms-system</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<springboot.version>2.1.2.RELEASE</springboot.version>
		<findbugs.annotation.version>3.0.1</findbugs.annotation.version>
		<kaptcha.version>2.3.2</kaptcha.version>
		<shiro.version>1.7.1</shiro.version>
		<thymeleaf.extras.shiro.version>2.0.0</thymeleaf.extras.shiro.version>
		<fastjson.version>1.2.70</fastjson.version>
		<jackson-databind.version>2.9.8</jackson-databind.version>
		<commons.io.version>2.5</commons.io.version>
		<commons.collections.version>3.2.2</commons.collections.version>
		<bitwalker.version>1.19</bitwalker.version>
		<lombok.version>[1.0.0,9.99.99]</lombok.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${springboot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>annotations</artifactId>
				<version>${findbugs.annotation.version}</version>
			</dependency>

			<!-- lombok -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>compile</scope>
			</dependency>

			<!--验证码 -->
			<dependency>
				<groupId>com.github.penggle</groupId>
				<artifactId>kaptcha</artifactId>
				<version>${kaptcha.version}</version>
			</dependency>

			<!--Shiro核心框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<!-- Shiro使用Srping框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-spring</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<!-- Shiro使用EhCache缓存框架 -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-ehcache</artifactId>
				<version>${shiro.version}</version>
			</dependency>

			<!-- thymeleaf模板引擎和shiro框架的整合 -->
			<dependency>
				<groupId>com.github.theborakompanioni</groupId>
				<artifactId>thymeleaf-extras-shiro</artifactId>
				<version>${thymeleaf.extras.shiro.version}</version>
			</dependency>

			<!-- JSON工具类 -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson-databind.version}</version>
			</dependency>

			<!-- 阿里JSON解析器 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>

			<!--io常用工具类 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>

			<!-- 集合工具类 -->
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
			</dependency>

			<!-- 解析客户端操作系统、浏览器等 -->
			<dependency>
				<groupId>eu.bitwalker</groupId>
				<artifactId>UserAgentUtils</artifactId>
				<version>${bitwalker.version}</version>
			</dependency>

			<!-- 公用模块 -->
			<dependency>
				<groupId>com.demo</groupId>
				<artifactId>lms-common</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<!-- 核心模块 -->
			<dependency>
				<groupId>com.demo</groupId>
				<artifactId>lms-framework</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<!-- 系统模块 -->
			<dependency>
				<groupId>com.demo</groupId>
				<artifactId>lms-system</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<!-- 实例模块 -->
			<dependency>
				<groupId>com.demo</groupId>
				<artifactId>lms-sample</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- maven插件（不写也可以） 有次插件后可以通过配置maven命令spring-boot:run来启动项目 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${springboot.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
